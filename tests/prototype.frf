"" 1 begin
  dup 3 % 0 = if
    swap "fizz" strcat swap
    dup 5 % 0 != if
      swap " " strcat  swap
    else 
      swap "buzz " strcat swap
    then
  else 
    dup 5 % 0 = if
      swap "buzz " strcat swap
    else
      dup intostr rot swap " " strcat strcat swap
    then
  then
  dup 10 % 0 = if
    swap "\n" strcat . "" swap
  then
  1 + dup 1000 >
until
pop .

(
1 begin 
    dup 3 = if
        2 .
        break
    then
    dup 5 = if
        break
    then
    1 + dup 5 >
until
)
(
1  11 1 cjmp 2 3 -4 6
depth popn
1 1 +
4 *
3 -
2 /
0 if 2 then 3
)