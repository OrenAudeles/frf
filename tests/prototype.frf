
: fizz ( i -- i s )
  dup 3 % 0 = if
    dup 5 % 0 = if
      "fizzbuzz"
    else
      "buzz"
    then
  else
    dup 5 % 0 = if
      "buzz"
    else
      dup intostr
    then
  then
  " " strcat
;

: fizzbuzz( i -- )
"" 1 begin
  fizz rot swap strcat swap
  dup 10 % 0 = if
    swap "\n" strcat . "" swap
  then
  1 + dup 4 pick >
until
pop . pop
;

137 fizzbuzz

(
1 begin 
    dup 3 = if
        2 .
        break
    then
    dup 5 = if
        break
    then
    1 + dup 5 >
until
)
(
1  11 1 cjmp 2 3 -4 6
depth popn
1 1 +
4 *
3 -
2 /
0 if 2 then 3
)